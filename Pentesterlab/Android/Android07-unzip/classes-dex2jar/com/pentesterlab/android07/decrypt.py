#!/usr/bin/env python3

import base64
from Crypto.Cipher import AES
from Crypto.Hash import MD5
import re
 
encoded = "ED1nf3uLW4Hkwr1aGw+NpN5sgcRMPCFuk0XgtW181m4o6d0Ml3D/j6h1NSyOh4dbcGsbK6rcZOUyzHxWVb4QkA"
key = ""
result = re.compile('.*-(\w+){4}-(\w+){4}-(\w+){4}-.*')

def decrypt_AES(enc,k):
	abyte = base64.b64decode(enc)
	iv = abyte[:16]
	data = abyte[16:]
		
	cipher = AES.new(k, AES.MODE_CBC,iv)
	plaintext = cipher.decrypt(data)
	return str(plaintext)

if len(encoded) % 4 != 0:
	while len(encoded) % 4 != 0:
		encoded = encoded + "=="
		for x in range(0,9999):
			pin = "%04d" % x
			h = MD5.new()
			h.update(pin.encode())
			key = h.digest()[:16]
			decrypt_AES(encoded,key)
			if result.match(decrypt_AES(encoded,key)):
				print(decrypt_AES(encoded,key))
else:
	for x in range(0,9999):
		pin = "%04d" % x
		h = MD5.new()
		h.update(pin.encode())
		key = h.digest()[:16]
		decrypt_AES(encoded,key)
		if result.match(decrypt_AES(encoded,key)):
			print(decrypt_AES(encoded,key))
