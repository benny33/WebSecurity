import java.util.Base64;
import javax.crypto.Cipher;
import javax.crypto.spec.IvParameterSpec;
import javax.crypto.spec.SecretKeySpec;

public class decrypt {
	public static void main(String[] argv) {
		System.out.println(decrypt("ygiG2VpgnW6z2ocCPEVaYhDwBs3UxZENbgh1iQJ6NhpBqHsczQsDh1rD3WjejQ7JH1o+lvBdtxhG64qyLQyHSg", "__pentesterlab__".getBytes()));
}

  public static String decrypt(String paramString, byte[] paramArrayOfbyte) {
    try {
      byte[] arrayOfByte1 = Base64.getDecoder().decode(paramString);
      byte[] arrayOfByte2 = new byte[arrayOfByte1.length];
      arrayOfByte2 = new byte[16];
      System.arraycopy(arrayOfByte1, 0, arrayOfByte2, 0, arrayOfByte2.length);
      IvParameterSpec ivParameterSpec = new IvParameterSpec(arrayOfByte2);
      int i = arrayOfByte1.length - 16;
      byte[] arrayOfByte3 = new byte[i];
      System.arraycopy(arrayOfByte1, 16, arrayOfByte3, 0, i);
      SecretKeySpec secretKeySpec = new SecretKeySpec(paramArrayOfbyte, "AES");
      Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5Padding");
      cipher.init(2, secretKeySpec, ivParameterSpec);
      return new String(cipher.doFinal(arrayOfByte3));
    } catch (Exception exception) {
      return "";
    } 
  }
}

